<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sundehui.mapper.UserMapper">
    <resultMap id="user" type="com.sundehui.domain.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, account, password, username, phone, photo, role_id
    </sql>

    <select id="getUidByAccount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select id from user where account = #{account}
    </select>

    <select id="checkAccount" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(*) from user where account = #{account}
    </select>
    <!--查询所有用户-->
    <select id="findAll" resultMap="user">
    select * from user;
  </select>
    <!--根据账户查找用户-->
    <select id="selectByAccount" resultMap="user" parameterType="java.lang.String">
        select
        user.*,role.role_name
        from user inner join
        role
        on user.role_id = role.id
        where account=#{account}
    </select>

    <select id="selectByPrimaryKey" resultMap="user" parameterType="java.lang.Integer">
        select
        user.*,role.role_name
        from user inner join
        role
        on user.role_id = role.id
        where user.id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.sundehui.domain.User">
    insert into user (id, account, password,
      username, phone,
      photo, role_id)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR},  #{phone,jdbcType=VARCHAR},
      #{photo,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.sundehui.domain.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="photo != null">
                photo,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                #{photo,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sundehui.domain.User">
        update user
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>

            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                photo = #{photo,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sundehui.domain.User">
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>